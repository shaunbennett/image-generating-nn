/******/ (function(modules) { // webpackBootstrap
/******/ 	// The module cache
/******/ 	var installedModules = {};

/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {

/******/ 		// Check if module is in cache
/******/ 		if(installedModules[moduleId])
/******/ 			return installedModules[moduleId].exports;

/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = installedModules[moduleId] = {
/******/ 			i: moduleId,
/******/ 			l: false,
/******/ 			exports: {}
/******/ 		};

/******/ 		// Execute the module function
/******/ 		modules[moduleId].call(module.exports, module, module.exports, __webpack_require__);

/******/ 		// Flag the module as loaded
/******/ 		module.l = true;

/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}


/******/ 	// expose the modules object (__webpack_modules__)
/******/ 	__webpack_require__.m = modules;

/******/ 	// expose the module cache
/******/ 	__webpack_require__.c = installedModules;

/******/ 	// identity function for calling harmory imports with the correct context
/******/ 	__webpack_require__.i = function(value) { return value; };

/******/ 	// define getter function for harmory exports
/******/ 	__webpack_require__.d = function(exports, name, getter) {
/******/ 		Object.defineProperty(exports, name, {
/******/ 			configurable: false,
/******/ 			enumerable: true,
/******/ 			get: getter
/******/ 		});
/******/ 	};

/******/ 	// getDefaultExport function for compatibility with non-harmony modules
/******/ 	__webpack_require__.n = function(module) {
/******/ 		var getter = module && module.__esModule ?
/******/ 			function getDefault() { return module['default']; } :
/******/ 			function getModuleExports() { return module; };
/******/ 		__webpack_require__.d(getter, 'a', getter);
/******/ 		return getter;
/******/ 	};

/******/ 	// Object.prototype.hasOwnProperty.call
/******/ 	__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };

/******/ 	// __webpack_public_path__
/******/ 	__webpack_require__.p = "";

/******/ 	// Load entry module and return exports
/******/ 	return __webpack_require__(__webpack_require__.s = 8);
/******/ })
/************************************************************************/
/******/ ([
/* 0 */
/***/ function(module, exports) {

"use strict";
eval("\"use strict\";\r\nvar Util = (function () {\r\n    function Util() {\r\n    }\r\n    Util.clamp = function (arg, min, max) {\r\n        if (arg < min)\r\n            return min;\r\n        if (arg > max)\r\n            return max;\r\n        return arg;\r\n    };\r\n    Util.sigmoid = function (z) {\r\n        return 1 / (1 + Math.exp(-z));\r\n    };\r\n    Util.sigmoidPrime = function (z) {\r\n        return Util.sigmoid(z) * (1 - Util.sigmoid(z));\r\n    };\r\n    Util.dot = function (xs, ys) {\r\n        if (xs.length != ys.length) {\r\n            throw new Error(\"Util.dot: xs and ys not same length.\");\r\n        }\r\n        var z = 0;\r\n        for (var i = 0; i < xs.length; ++i) {\r\n            z += xs[i] * ys[i];\r\n        }\r\n        return z;\r\n    };\r\n    Util.hadamard = function (xs, ys) {\r\n        if (xs.length != ys.length)\r\n            throw new Error(\"Util.hadamard: xs and ys not same length\");\r\n        var res = new Float64Array(xs.length);\r\n        for (var i = 0; i < xs.length; ++i) {\r\n            res[i] = xs[i] * ys[i];\r\n        }\r\n        return res;\r\n    };\r\n    Util.rand = function () {\r\n        return Math.random() - Math.random();\r\n    };\r\n    Util.shuffle = function (o) {\r\n        for (var j, x, i = o.length; i; j = Math.floor(Math.random() * i), x = o[--i], o[i] = o[j], o[j] = x)\r\n            ;\r\n        return o;\r\n    };\r\n    return Util;\r\n}());\r\nexports.Util = Util;\r\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9zcmMvbm4vVXRpbC50cz84MDNiIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsdUJBQXVCLGVBQWU7QUFDdEM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLHVCQUF1QixlQUFlO0FBQ3RDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxvQ0FBb0MsR0FBRztBQUN2QztBQUNBO0FBQ0E7QUFDQTtBQUNBLENBQUM7QUFDRCIsImZpbGUiOiIwLmpzIiwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XHJcbnZhciBVdGlsID0gKGZ1bmN0aW9uICgpIHtcclxuICAgIGZ1bmN0aW9uIFV0aWwoKSB7XHJcbiAgICB9XHJcbiAgICBVdGlsLmNsYW1wID0gZnVuY3Rpb24gKGFyZywgbWluLCBtYXgpIHtcclxuICAgICAgICBpZiAoYXJnIDwgbWluKVxyXG4gICAgICAgICAgICByZXR1cm4gbWluO1xyXG4gICAgICAgIGlmIChhcmcgPiBtYXgpXHJcbiAgICAgICAgICAgIHJldHVybiBtYXg7XHJcbiAgICAgICAgcmV0dXJuIGFyZztcclxuICAgIH07XHJcbiAgICBVdGlsLnNpZ21vaWQgPSBmdW5jdGlvbiAoeikge1xyXG4gICAgICAgIHJldHVybiAxIC8gKDEgKyBNYXRoLmV4cCgteikpO1xyXG4gICAgfTtcclxuICAgIFV0aWwuc2lnbW9pZFByaW1lID0gZnVuY3Rpb24gKHopIHtcclxuICAgICAgICByZXR1cm4gVXRpbC5zaWdtb2lkKHopICogKDEgLSBVdGlsLnNpZ21vaWQoeikpO1xyXG4gICAgfTtcclxuICAgIFV0aWwuZG90ID0gZnVuY3Rpb24gKHhzLCB5cykge1xyXG4gICAgICAgIGlmICh4cy5sZW5ndGggIT0geXMubGVuZ3RoKSB7XHJcbiAgICAgICAgICAgIHRocm93IG5ldyBFcnJvcihcIlV0aWwuZG90OiB4cyBhbmQgeXMgbm90IHNhbWUgbGVuZ3RoLlwiKTtcclxuICAgICAgICB9XHJcbiAgICAgICAgdmFyIHogPSAwO1xyXG4gICAgICAgIGZvciAodmFyIGkgPSAwOyBpIDwgeHMubGVuZ3RoOyArK2kpIHtcclxuICAgICAgICAgICAgeiArPSB4c1tpXSAqIHlzW2ldO1xyXG4gICAgICAgIH1cclxuICAgICAgICByZXR1cm4gejtcclxuICAgIH07XHJcbiAgICBVdGlsLmhhZGFtYXJkID0gZnVuY3Rpb24gKHhzLCB5cykge1xyXG4gICAgICAgIGlmICh4cy5sZW5ndGggIT0geXMubGVuZ3RoKVxyXG4gICAgICAgICAgICB0aHJvdyBuZXcgRXJyb3IoXCJVdGlsLmhhZGFtYXJkOiB4cyBhbmQgeXMgbm90IHNhbWUgbGVuZ3RoXCIpO1xyXG4gICAgICAgIHZhciByZXMgPSBuZXcgRmxvYXQ2NEFycmF5KHhzLmxlbmd0aCk7XHJcbiAgICAgICAgZm9yICh2YXIgaSA9IDA7IGkgPCB4cy5sZW5ndGg7ICsraSkge1xyXG4gICAgICAgICAgICByZXNbaV0gPSB4c1tpXSAqIHlzW2ldO1xyXG4gICAgICAgIH1cclxuICAgICAgICByZXR1cm4gcmVzO1xyXG4gICAgfTtcclxuICAgIFV0aWwucmFuZCA9IGZ1bmN0aW9uICgpIHtcclxuICAgICAgICByZXR1cm4gTWF0aC5yYW5kb20oKSAtIE1hdGgucmFuZG9tKCk7XHJcbiAgICB9O1xyXG4gICAgVXRpbC5zaHVmZmxlID0gZnVuY3Rpb24gKG8pIHtcclxuICAgICAgICBmb3IgKHZhciBqLCB4LCBpID0gby5sZW5ndGg7IGk7IGogPSBNYXRoLmZsb29yKE1hdGgucmFuZG9tKCkgKiBpKSwgeCA9IG9bLS1pXSwgb1tpXSA9IG9bal0sIG9bal0gPSB4KVxyXG4gICAgICAgICAgICA7XHJcbiAgICAgICAgcmV0dXJuIG87XHJcbiAgICB9O1xyXG4gICAgcmV0dXJuIFV0aWw7XHJcbn0oKSk7XHJcbmV4cG9ydHMuVXRpbCA9IFV0aWw7XHJcblxuXG5cbi8vLy8vLy8vLy8vLy8vLy8vL1xuLy8gV0VCUEFDSyBGT09URVJcbi8vIC4vc3JjL25uL1V0aWwudHNcbi8vIG1vZHVsZSBpZCA9IDBcbi8vIG1vZHVsZSBjaHVua3MgPSAwIl0sInNvdXJjZVJvb3QiOiIifQ==");

/***/ },
/* 1 */
/***/ function(module, exports, __webpack_require__) {

"use strict";
eval("\"use strict\";\r\nvar NeuralNetwork_1 = __webpack_require__(6);\r\nexports.NeuralNetwork = NeuralNetwork_1.NeuralNetwork;\r\nvar Neuron_1 = __webpack_require__(2);\r\nexports.Neuron = Neuron_1.Neuron;\r\nvar NeuronLayer_1 = __webpack_require__(3);\r\nexports.NeuronLayer = NeuronLayer_1.NeuronLayer;\r\nvar TrainingData_1 = __webpack_require__(4);\r\nexports.TrainingData = TrainingData_1.TrainingData;\r\nvar Util_1 = __webpack_require__(0);\r\nexports.Util = Util_1.Util;\r\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9zcmMvaW5kZXgudHM/ZDFlNyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBIiwiZmlsZSI6IjEuanMiLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcclxudmFyIE5ldXJhbE5ldHdvcmtfMSA9IHJlcXVpcmUoJy4vbm4vTmV1cmFsTmV0d29yaycpO1xyXG5leHBvcnRzLk5ldXJhbE5ldHdvcmsgPSBOZXVyYWxOZXR3b3JrXzEuTmV1cmFsTmV0d29yaztcclxudmFyIE5ldXJvbl8xID0gcmVxdWlyZSgnLi9ubi9OZXVyb24nKTtcclxuZXhwb3J0cy5OZXVyb24gPSBOZXVyb25fMS5OZXVyb247XHJcbnZhciBOZXVyb25MYXllcl8xID0gcmVxdWlyZSgnLi9ubi9OZXVyb25MYXllcicpO1xyXG5leHBvcnRzLk5ldXJvbkxheWVyID0gTmV1cm9uTGF5ZXJfMS5OZXVyb25MYXllcjtcclxudmFyIFRyYWluaW5nRGF0YV8xID0gcmVxdWlyZSgnLi9ubi9UcmFpbmluZ0RhdGEnKTtcclxuZXhwb3J0cy5UcmFpbmluZ0RhdGEgPSBUcmFpbmluZ0RhdGFfMS5UcmFpbmluZ0RhdGE7XHJcbnZhciBVdGlsXzEgPSByZXF1aXJlKCcuL25uL1V0aWwnKTtcclxuZXhwb3J0cy5VdGlsID0gVXRpbF8xLlV0aWw7XHJcblxuXG5cbi8vLy8vLy8vLy8vLy8vLy8vL1xuLy8gV0VCUEFDSyBGT09URVJcbi8vIC4vc3JjL2luZGV4LnRzXG4vLyBtb2R1bGUgaWQgPSAxXG4vLyBtb2R1bGUgY2h1bmtzID0gMCJdLCJzb3VyY2VSb290IjoiIn0=");

/***/ },
/* 2 */
/***/ function(module, exports, __webpack_require__) {

"use strict";
eval("\"use strict\";\r\nvar Util_1 = __webpack_require__(0);\r\nvar Neuron = (function () {\r\n    function Neuron(numInputs) {\r\n        this.numInputs = numInputs;\r\n        if (!numInputs)\r\n            throw new Error(\"Neuron: numInputs is invalid:\" + numInputs);\r\n        this.bias = Util_1.Util.rand();\r\n        this.weights = new Float64Array(numInputs);\r\n        for (var i = 0; i < numInputs; ++i) {\r\n            this.weights[i] = Util_1.Util.rand();\r\n        }\r\n    }\r\n    Neuron.prototype.feedForward = function (input) {\r\n        if (input.length != this.numInputs)\r\n            throw new Error(\"feedForward: invalid input length \" + JSON.stringify(input.length) + \" should be \" + this.numInputs);\r\n        var activation = this.bias;\r\n        for (var i = 0; i < this.numInputs; ++i) {\r\n            activation += this.weights[i] * input[i];\r\n        }\r\n        if (isNaN(activation)) {\r\n            throw new Error(\"feedForward: activation NaN for \" + JSON.stringify(input) + \" and weights \" + JSON.stringify(this.weights));\r\n        }\r\n        return Util_1.Util.sigmoid(activation);\r\n    };\r\n    Neuron.prototype.feedForwardRaw = function (input) {\r\n        if (input.length != this.numInputs)\r\n            throw new Error(\"feedForwardRaw: invalid input length\" + JSON.stringify(input));\r\n        var activation = this.bias;\r\n        for (var i = 0; i < this.numInputs; ++i) {\r\n            activation += this.weights[i] * input[i];\r\n        }\r\n        if (isNaN(activation)) {\r\n            throw new Error(\"feedForwardRaw: activation NaN for \" + JSON.stringify(input) + \" and weights \" + JSON.stringify(this.weights));\r\n        }\r\n        return activation;\r\n    };\r\n    Neuron.prototype.import = function (weights, offset) {\r\n        this.bias = weights[offset];\r\n        for (var i = 0; i < this.numInputs; ++i) {\r\n            this.weights[i] = weights[i + offset + 1];\r\n        }\r\n        return offset + 1 + this.numInputs;\r\n    };\r\n    Neuron.prototype.export = function (weights, offset) {\r\n        weights[offset] = this.bias;\r\n        for (var i = 0; i < this.numInputs; ++i) {\r\n            weights[i + offset + 1] = this.weights[i];\r\n        }\r\n        return offset + 1 + this.numInputs;\r\n    };\r\n    Neuron.prototype.getBias = function () {\r\n        return this.bias;\r\n    };\r\n    Neuron.prototype.putBias = function (x) {\r\n        this.bias = x;\r\n    };\r\n    Neuron.prototype.getWeights = function () {\r\n        return this.weights;\r\n    };\r\n    Neuron.prototype.putWeights = function (ws) {\r\n        for (var i = 0; i < this.numInputs; ++i) {\r\n            this.weights[i] = ws[i];\r\n        }\r\n    };\r\n    return Neuron;\r\n}());\r\nexports.Neuron = Neuron;\r\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9zcmMvbm4vTmV1cm9uLnRzP2M5NzkiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsdUJBQXVCLGVBQWU7QUFDdEM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSx1QkFBdUIsb0JBQW9CO0FBQzNDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSx1QkFBdUIsb0JBQW9CO0FBQzNDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLHVCQUF1QixvQkFBb0I7QUFDM0M7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsdUJBQXVCLG9CQUFvQjtBQUMzQztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsdUJBQXVCLG9CQUFvQjtBQUMzQztBQUNBO0FBQ0E7QUFDQTtBQUNBLENBQUM7QUFDRCIsImZpbGUiOiIyLmpzIiwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XHJcbnZhciBVdGlsXzEgPSByZXF1aXJlKCcuL1V0aWwnKTtcclxudmFyIE5ldXJvbiA9IChmdW5jdGlvbiAoKSB7XHJcbiAgICBmdW5jdGlvbiBOZXVyb24obnVtSW5wdXRzKSB7XHJcbiAgICAgICAgdGhpcy5udW1JbnB1dHMgPSBudW1JbnB1dHM7XHJcbiAgICAgICAgaWYgKCFudW1JbnB1dHMpXHJcbiAgICAgICAgICAgIHRocm93IG5ldyBFcnJvcihcIk5ldXJvbjogbnVtSW5wdXRzIGlzIGludmFsaWQ6XCIgKyBudW1JbnB1dHMpO1xyXG4gICAgICAgIHRoaXMuYmlhcyA9IFV0aWxfMS5VdGlsLnJhbmQoKTtcclxuICAgICAgICB0aGlzLndlaWdodHMgPSBuZXcgRmxvYXQ2NEFycmF5KG51bUlucHV0cyk7XHJcbiAgICAgICAgZm9yICh2YXIgaSA9IDA7IGkgPCBudW1JbnB1dHM7ICsraSkge1xyXG4gICAgICAgICAgICB0aGlzLndlaWdodHNbaV0gPSBVdGlsXzEuVXRpbC5yYW5kKCk7XHJcbiAgICAgICAgfVxyXG4gICAgfVxyXG4gICAgTmV1cm9uLnByb3RvdHlwZS5mZWVkRm9yd2FyZCA9IGZ1bmN0aW9uIChpbnB1dCkge1xyXG4gICAgICAgIGlmIChpbnB1dC5sZW5ndGggIT0gdGhpcy5udW1JbnB1dHMpXHJcbiAgICAgICAgICAgIHRocm93IG5ldyBFcnJvcihcImZlZWRGb3J3YXJkOiBpbnZhbGlkIGlucHV0IGxlbmd0aCBcIiArIEpTT04uc3RyaW5naWZ5KGlucHV0Lmxlbmd0aCkgKyBcIiBzaG91bGQgYmUgXCIgKyB0aGlzLm51bUlucHV0cyk7XHJcbiAgICAgICAgdmFyIGFjdGl2YXRpb24gPSB0aGlzLmJpYXM7XHJcbiAgICAgICAgZm9yICh2YXIgaSA9IDA7IGkgPCB0aGlzLm51bUlucHV0czsgKytpKSB7XHJcbiAgICAgICAgICAgIGFjdGl2YXRpb24gKz0gdGhpcy53ZWlnaHRzW2ldICogaW5wdXRbaV07XHJcbiAgICAgICAgfVxyXG4gICAgICAgIGlmIChpc05hTihhY3RpdmF0aW9uKSkge1xyXG4gICAgICAgICAgICB0aHJvdyBuZXcgRXJyb3IoXCJmZWVkRm9yd2FyZDogYWN0aXZhdGlvbiBOYU4gZm9yIFwiICsgSlNPTi5zdHJpbmdpZnkoaW5wdXQpICsgXCIgYW5kIHdlaWdodHMgXCIgKyBKU09OLnN0cmluZ2lmeSh0aGlzLndlaWdodHMpKTtcclxuICAgICAgICB9XHJcbiAgICAgICAgcmV0dXJuIFV0aWxfMS5VdGlsLnNpZ21vaWQoYWN0aXZhdGlvbik7XHJcbiAgICB9O1xyXG4gICAgTmV1cm9uLnByb3RvdHlwZS5mZWVkRm9yd2FyZFJhdyA9IGZ1bmN0aW9uIChpbnB1dCkge1xyXG4gICAgICAgIGlmIChpbnB1dC5sZW5ndGggIT0gdGhpcy5udW1JbnB1dHMpXHJcbiAgICAgICAgICAgIHRocm93IG5ldyBFcnJvcihcImZlZWRGb3J3YXJkUmF3OiBpbnZhbGlkIGlucHV0IGxlbmd0aFwiICsgSlNPTi5zdHJpbmdpZnkoaW5wdXQpKTtcclxuICAgICAgICB2YXIgYWN0aXZhdGlvbiA9IHRoaXMuYmlhcztcclxuICAgICAgICBmb3IgKHZhciBpID0gMDsgaSA8IHRoaXMubnVtSW5wdXRzOyArK2kpIHtcclxuICAgICAgICAgICAgYWN0aXZhdGlvbiArPSB0aGlzLndlaWdodHNbaV0gKiBpbnB1dFtpXTtcclxuICAgICAgICB9XHJcbiAgICAgICAgaWYgKGlzTmFOKGFjdGl2YXRpb24pKSB7XHJcbiAgICAgICAgICAgIHRocm93IG5ldyBFcnJvcihcImZlZWRGb3J3YXJkUmF3OiBhY3RpdmF0aW9uIE5hTiBmb3IgXCIgKyBKU09OLnN0cmluZ2lmeShpbnB1dCkgKyBcIiBhbmQgd2VpZ2h0cyBcIiArIEpTT04uc3RyaW5naWZ5KHRoaXMud2VpZ2h0cykpO1xyXG4gICAgICAgIH1cclxuICAgICAgICByZXR1cm4gYWN0aXZhdGlvbjtcclxuICAgIH07XHJcbiAgICBOZXVyb24ucHJvdG90eXBlLmltcG9ydCA9IGZ1bmN0aW9uICh3ZWlnaHRzLCBvZmZzZXQpIHtcclxuICAgICAgICB0aGlzLmJpYXMgPSB3ZWlnaHRzW29mZnNldF07XHJcbiAgICAgICAgZm9yICh2YXIgaSA9IDA7IGkgPCB0aGlzLm51bUlucHV0czsgKytpKSB7XHJcbiAgICAgICAgICAgIHRoaXMud2VpZ2h0c1tpXSA9IHdlaWdodHNbaSArIG9mZnNldCArIDFdO1xyXG4gICAgICAgIH1cclxuICAgICAgICByZXR1cm4gb2Zmc2V0ICsgMSArIHRoaXMubnVtSW5wdXRzO1xyXG4gICAgfTtcclxuICAgIE5ldXJvbi5wcm90b3R5cGUuZXhwb3J0ID0gZnVuY3Rpb24gKHdlaWdodHMsIG9mZnNldCkge1xyXG4gICAgICAgIHdlaWdodHNbb2Zmc2V0XSA9IHRoaXMuYmlhcztcclxuICAgICAgICBmb3IgKHZhciBpID0gMDsgaSA8IHRoaXMubnVtSW5wdXRzOyArK2kpIHtcclxuICAgICAgICAgICAgd2VpZ2h0c1tpICsgb2Zmc2V0ICsgMV0gPSB0aGlzLndlaWdodHNbaV07XHJcbiAgICAgICAgfVxyXG4gICAgICAgIHJldHVybiBvZmZzZXQgKyAxICsgdGhpcy5udW1JbnB1dHM7XHJcbiAgICB9O1xyXG4gICAgTmV1cm9uLnByb3RvdHlwZS5nZXRCaWFzID0gZnVuY3Rpb24gKCkge1xyXG4gICAgICAgIHJldHVybiB0aGlzLmJpYXM7XHJcbiAgICB9O1xyXG4gICAgTmV1cm9uLnByb3RvdHlwZS5wdXRCaWFzID0gZnVuY3Rpb24gKHgpIHtcclxuICAgICAgICB0aGlzLmJpYXMgPSB4O1xyXG4gICAgfTtcclxuICAgIE5ldXJvbi5wcm90b3R5cGUuZ2V0V2VpZ2h0cyA9IGZ1bmN0aW9uICgpIHtcclxuICAgICAgICByZXR1cm4gdGhpcy53ZWlnaHRzO1xyXG4gICAgfTtcclxuICAgIE5ldXJvbi5wcm90b3R5cGUucHV0V2VpZ2h0cyA9IGZ1bmN0aW9uICh3cykge1xyXG4gICAgICAgIGZvciAodmFyIGkgPSAwOyBpIDwgdGhpcy5udW1JbnB1dHM7ICsraSkge1xyXG4gICAgICAgICAgICB0aGlzLndlaWdodHNbaV0gPSB3c1tpXTtcclxuICAgICAgICB9XHJcbiAgICB9O1xyXG4gICAgcmV0dXJuIE5ldXJvbjtcclxufSgpKTtcclxuZXhwb3J0cy5OZXVyb24gPSBOZXVyb247XHJcblxuXG5cbi8vLy8vLy8vLy8vLy8vLy8vL1xuLy8gV0VCUEFDSyBGT09URVJcbi8vIC4vc3JjL25uL05ldXJvbi50c1xuLy8gbW9kdWxlIGlkID0gMlxuLy8gbW9kdWxlIGNodW5rcyA9IDAiXSwic291cmNlUm9vdCI6IiJ9");

/***/ },
/* 3 */
/***/ function(module, exports, __webpack_require__) {

"use strict";
eval("\"use strict\";\r\nvar Neuron_1 = __webpack_require__(2);\r\nvar NeuronLayer = (function () {\r\n    function NeuronLayer(numInputs, numOutputs) {\r\n        this.numInputs = numInputs;\r\n        this.numOutputs = numOutputs;\r\n        this.neurons = new Array(numOutputs);\r\n        for (var i = 0; i < numOutputs; ++i) {\r\n            this.neurons[i] = new Neuron_1.Neuron(numInputs);\r\n        }\r\n    }\r\n    NeuronLayer.prototype.feedForward = function (inputs) {\r\n        var res = new Float64Array(this.numOutputs);\r\n        for (var i = 0; i < this.numOutputs; ++i) {\r\n            res[i] = this.neurons[i].feedForward(inputs);\r\n        }\r\n        return res;\r\n    };\r\n    NeuronLayer.prototype.feedForwardRaw = function (inputs) {\r\n        var res = new Float64Array(this.numOutputs);\r\n        for (var i = 0; i < this.numOutputs; ++i) {\r\n            res[i] = this.neurons[i].feedForwardRaw(inputs);\r\n        }\r\n        return res;\r\n    };\r\n    NeuronLayer.prototype.export = function (weights, offset) {\r\n        for (var i = 0; i < this.numInputs; ++i) {\r\n            offset = this.neurons[i].export(weights, offset);\r\n        }\r\n        return offset;\r\n    };\r\n    NeuronLayer.prototype.import = function (weights, offset) {\r\n        for (var i = 0; i < this.numInputs; ++i) {\r\n            offset = this.neurons[i].import(weights, offset);\r\n        }\r\n        return offset;\r\n    };\r\n    NeuronLayer.prototype.getBiases = function () {\r\n        return this.neurons.map(function (neuron) { return neuron.getBias(); });\r\n    };\r\n    NeuronLayer.prototype.putBiases = function (x) {\r\n        for (var i = 0; i < this.neurons.length; ++i) {\r\n            this.neurons[i].putBias(x[i]);\r\n        }\r\n    };\r\n    NeuronLayer.prototype.getWeights = function () {\r\n        return this.neurons.map(function (neuron) { return neuron.getWeights(); });\r\n    };\r\n    NeuronLayer.prototype.putWeights = function (ws) {\r\n        for (var i = 0; i < this.numOutputs; ++i) {\r\n            this.neurons[i].putWeights(ws[i]);\r\n        }\r\n    };\r\n    return NeuronLayer;\r\n}());\r\nexports.NeuronLayer = NeuronLayer;\r\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9zcmMvbm4vTmV1cm9uTGF5ZXIudHM/MjU0YiJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLHVCQUF1QixnQkFBZ0I7QUFDdkM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLHVCQUF1QixxQkFBcUI7QUFDNUM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsdUJBQXVCLHFCQUFxQjtBQUM1QztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsdUJBQXVCLG9CQUFvQjtBQUMzQztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsdUJBQXVCLG9CQUFvQjtBQUMzQztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsbURBQW1ELHlCQUF5QixFQUFFO0FBQzlFO0FBQ0E7QUFDQSx1QkFBdUIseUJBQXlCO0FBQ2hEO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsbURBQW1ELDRCQUE0QixFQUFFO0FBQ2pGO0FBQ0E7QUFDQSx1QkFBdUIscUJBQXFCO0FBQzVDO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsQ0FBQztBQUNEIiwiZmlsZSI6IjMuanMiLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcclxudmFyIE5ldXJvbl8xID0gcmVxdWlyZSgnLi9OZXVyb24nKTtcclxudmFyIE5ldXJvbkxheWVyID0gKGZ1bmN0aW9uICgpIHtcclxuICAgIGZ1bmN0aW9uIE5ldXJvbkxheWVyKG51bUlucHV0cywgbnVtT3V0cHV0cykge1xyXG4gICAgICAgIHRoaXMubnVtSW5wdXRzID0gbnVtSW5wdXRzO1xyXG4gICAgICAgIHRoaXMubnVtT3V0cHV0cyA9IG51bU91dHB1dHM7XHJcbiAgICAgICAgdGhpcy5uZXVyb25zID0gbmV3IEFycmF5KG51bU91dHB1dHMpO1xyXG4gICAgICAgIGZvciAodmFyIGkgPSAwOyBpIDwgbnVtT3V0cHV0czsgKytpKSB7XHJcbiAgICAgICAgICAgIHRoaXMubmV1cm9uc1tpXSA9IG5ldyBOZXVyb25fMS5OZXVyb24obnVtSW5wdXRzKTtcclxuICAgICAgICB9XHJcbiAgICB9XHJcbiAgICBOZXVyb25MYXllci5wcm90b3R5cGUuZmVlZEZvcndhcmQgPSBmdW5jdGlvbiAoaW5wdXRzKSB7XHJcbiAgICAgICAgdmFyIHJlcyA9IG5ldyBGbG9hdDY0QXJyYXkodGhpcy5udW1PdXRwdXRzKTtcclxuICAgICAgICBmb3IgKHZhciBpID0gMDsgaSA8IHRoaXMubnVtT3V0cHV0czsgKytpKSB7XHJcbiAgICAgICAgICAgIHJlc1tpXSA9IHRoaXMubmV1cm9uc1tpXS5mZWVkRm9yd2FyZChpbnB1dHMpO1xyXG4gICAgICAgIH1cclxuICAgICAgICByZXR1cm4gcmVzO1xyXG4gICAgfTtcclxuICAgIE5ldXJvbkxheWVyLnByb3RvdHlwZS5mZWVkRm9yd2FyZFJhdyA9IGZ1bmN0aW9uIChpbnB1dHMpIHtcclxuICAgICAgICB2YXIgcmVzID0gbmV3IEZsb2F0NjRBcnJheSh0aGlzLm51bU91dHB1dHMpO1xyXG4gICAgICAgIGZvciAodmFyIGkgPSAwOyBpIDwgdGhpcy5udW1PdXRwdXRzOyArK2kpIHtcclxuICAgICAgICAgICAgcmVzW2ldID0gdGhpcy5uZXVyb25zW2ldLmZlZWRGb3J3YXJkUmF3KGlucHV0cyk7XHJcbiAgICAgICAgfVxyXG4gICAgICAgIHJldHVybiByZXM7XHJcbiAgICB9O1xyXG4gICAgTmV1cm9uTGF5ZXIucHJvdG90eXBlLmV4cG9ydCA9IGZ1bmN0aW9uICh3ZWlnaHRzLCBvZmZzZXQpIHtcclxuICAgICAgICBmb3IgKHZhciBpID0gMDsgaSA8IHRoaXMubnVtSW5wdXRzOyArK2kpIHtcclxuICAgICAgICAgICAgb2Zmc2V0ID0gdGhpcy5uZXVyb25zW2ldLmV4cG9ydCh3ZWlnaHRzLCBvZmZzZXQpO1xyXG4gICAgICAgIH1cclxuICAgICAgICByZXR1cm4gb2Zmc2V0O1xyXG4gICAgfTtcclxuICAgIE5ldXJvbkxheWVyLnByb3RvdHlwZS5pbXBvcnQgPSBmdW5jdGlvbiAod2VpZ2h0cywgb2Zmc2V0KSB7XHJcbiAgICAgICAgZm9yICh2YXIgaSA9IDA7IGkgPCB0aGlzLm51bUlucHV0czsgKytpKSB7XHJcbiAgICAgICAgICAgIG9mZnNldCA9IHRoaXMubmV1cm9uc1tpXS5pbXBvcnQod2VpZ2h0cywgb2Zmc2V0KTtcclxuICAgICAgICB9XHJcbiAgICAgICAgcmV0dXJuIG9mZnNldDtcclxuICAgIH07XHJcbiAgICBOZXVyb25MYXllci5wcm90b3R5cGUuZ2V0Qmlhc2VzID0gZnVuY3Rpb24gKCkge1xyXG4gICAgICAgIHJldHVybiB0aGlzLm5ldXJvbnMubWFwKGZ1bmN0aW9uIChuZXVyb24pIHsgcmV0dXJuIG5ldXJvbi5nZXRCaWFzKCk7IH0pO1xyXG4gICAgfTtcclxuICAgIE5ldXJvbkxheWVyLnByb3RvdHlwZS5wdXRCaWFzZXMgPSBmdW5jdGlvbiAoeCkge1xyXG4gICAgICAgIGZvciAodmFyIGkgPSAwOyBpIDwgdGhpcy5uZXVyb25zLmxlbmd0aDsgKytpKSB7XHJcbiAgICAgICAgICAgIHRoaXMubmV1cm9uc1tpXS5wdXRCaWFzKHhbaV0pO1xyXG4gICAgICAgIH1cclxuICAgIH07XHJcbiAgICBOZXVyb25MYXllci5wcm90b3R5cGUuZ2V0V2VpZ2h0cyA9IGZ1bmN0aW9uICgpIHtcclxuICAgICAgICByZXR1cm4gdGhpcy5uZXVyb25zLm1hcChmdW5jdGlvbiAobmV1cm9uKSB7IHJldHVybiBuZXVyb24uZ2V0V2VpZ2h0cygpOyB9KTtcclxuICAgIH07XHJcbiAgICBOZXVyb25MYXllci5wcm90b3R5cGUucHV0V2VpZ2h0cyA9IGZ1bmN0aW9uICh3cykge1xyXG4gICAgICAgIGZvciAodmFyIGkgPSAwOyBpIDwgdGhpcy5udW1PdXRwdXRzOyArK2kpIHtcclxuICAgICAgICAgICAgdGhpcy5uZXVyb25zW2ldLnB1dFdlaWdodHMod3NbaV0pO1xyXG4gICAgICAgIH1cclxuICAgIH07XHJcbiAgICByZXR1cm4gTmV1cm9uTGF5ZXI7XHJcbn0oKSk7XHJcbmV4cG9ydHMuTmV1cm9uTGF5ZXIgPSBOZXVyb25MYXllcjtcclxuXG5cblxuLy8vLy8vLy8vLy8vLy8vLy8vXG4vLyBXRUJQQUNLIEZPT1RFUlxuLy8gLi9zcmMvbm4vTmV1cm9uTGF5ZXIudHNcbi8vIG1vZHVsZSBpZCA9IDNcbi8vIG1vZHVsZSBjaHVua3MgPSAwIl0sInNvdXJjZVJvb3QiOiIifQ==");

/***/ },
/* 4 */
/***/ function(module, exports, __webpack_require__) {

"use strict";
eval("\"use strict\";\r\nvar Util_1 = __webpack_require__(0);\r\nvar TrainingPair = (function () {\r\n    function TrainingPair(input, output) {\r\n        this.input = new Float64Array(input);\r\n        this.output = new Float64Array(output);\r\n    }\r\n    return TrainingPair;\r\n}());\r\nexports.TrainingPair = TrainingPair;\r\nvar TrainingData = (function () {\r\n    function TrainingData() {\r\n        this.data = [];\r\n        this.batchIterator = 0;\r\n    }\r\n    TrainingData.prototype.export = function () {\r\n        return JSON.stringify(this.data.map(function (x) {\r\n            return { input: x.input, output: x.output };\r\n        }));\r\n    };\r\n    TrainingData.prototype.import = function (data) {\r\n        var _this = this;\r\n        var d = JSON.parse(data);\r\n        d.map(function (x) { return _this.train(x.input, x.output); });\r\n    };\r\n    TrainingData.prototype.train = function (input, output) {\r\n        this.data.push(new TrainingPair(input, output));\r\n    };\r\n    TrainingData.prototype.shuffle = function () {\r\n        this.data = Util_1.Util.shuffle(this.data);\r\n    };\r\n    TrainingData.prototype.reset = function () {\r\n        this.batchIterator = 0;\r\n        this.shuffle();\r\n    };\r\n    TrainingData.prototype.getBatch = function (batchSize) {\r\n        var result = [];\r\n        for (var i = 0; i < batchSize; ++i) {\r\n            if (i + this.batchIterator > this.data.length - 1)\r\n                break;\r\n            result.push(this.data[i + this.batchIterator]);\r\n        }\r\n        this.batchIterator += batchSize;\r\n        return result;\r\n    };\r\n    TrainingData.prototype.split = function (ratio) {\r\n        if (ratio < 0 || ratio > 1)\r\n            return new TrainingData();\r\n        var removeCount = Math.floor(this.data.length * ratio);\r\n        var keepCount = this.data.length - removeCount;\r\n        var newData = new TrainingData();\r\n        for (var i = 0; i < removeCount; ++i) {\r\n            newData.data.push(this.data[keepCount + i]);\r\n        }\r\n        this.data.length = keepCount;\r\n        return newData;\r\n    };\r\n    return TrainingData;\r\n}());\r\nexports.TrainingData = TrainingData;\r\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9zcmMvbm4vVHJhaW5pbmdEYXRhLnRzP2JlZWUiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLENBQUM7QUFDRDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0Esb0JBQW9CO0FBQ3BCLFNBQVM7QUFDVDtBQUNBO0FBQ0E7QUFDQTtBQUNBLDRCQUE0Qix1Q0FBdUMsRUFBRTtBQUNyRTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLHVCQUF1QixlQUFlO0FBQ3RDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsdUJBQXVCLGlCQUFpQjtBQUN4QztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxDQUFDO0FBQ0QiLCJmaWxlIjoiNC5qcyIsInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xyXG52YXIgVXRpbF8xID0gcmVxdWlyZSgnLi9VdGlsJyk7XHJcbnZhciBUcmFpbmluZ1BhaXIgPSAoZnVuY3Rpb24gKCkge1xyXG4gICAgZnVuY3Rpb24gVHJhaW5pbmdQYWlyKGlucHV0LCBvdXRwdXQpIHtcclxuICAgICAgICB0aGlzLmlucHV0ID0gbmV3IEZsb2F0NjRBcnJheShpbnB1dCk7XHJcbiAgICAgICAgdGhpcy5vdXRwdXQgPSBuZXcgRmxvYXQ2NEFycmF5KG91dHB1dCk7XHJcbiAgICB9XHJcbiAgICByZXR1cm4gVHJhaW5pbmdQYWlyO1xyXG59KCkpO1xyXG5leHBvcnRzLlRyYWluaW5nUGFpciA9IFRyYWluaW5nUGFpcjtcclxudmFyIFRyYWluaW5nRGF0YSA9IChmdW5jdGlvbiAoKSB7XHJcbiAgICBmdW5jdGlvbiBUcmFpbmluZ0RhdGEoKSB7XHJcbiAgICAgICAgdGhpcy5kYXRhID0gW107XHJcbiAgICAgICAgdGhpcy5iYXRjaEl0ZXJhdG9yID0gMDtcclxuICAgIH1cclxuICAgIFRyYWluaW5nRGF0YS5wcm90b3R5cGUuZXhwb3J0ID0gZnVuY3Rpb24gKCkge1xyXG4gICAgICAgIHJldHVybiBKU09OLnN0cmluZ2lmeSh0aGlzLmRhdGEubWFwKGZ1bmN0aW9uICh4KSB7XHJcbiAgICAgICAgICAgIHJldHVybiB7IGlucHV0OiB4LmlucHV0LCBvdXRwdXQ6IHgub3V0cHV0IH07XHJcbiAgICAgICAgfSkpO1xyXG4gICAgfTtcclxuICAgIFRyYWluaW5nRGF0YS5wcm90b3R5cGUuaW1wb3J0ID0gZnVuY3Rpb24gKGRhdGEpIHtcclxuICAgICAgICB2YXIgX3RoaXMgPSB0aGlzO1xyXG4gICAgICAgIHZhciBkID0gSlNPTi5wYXJzZShkYXRhKTtcclxuICAgICAgICBkLm1hcChmdW5jdGlvbiAoeCkgeyByZXR1cm4gX3RoaXMudHJhaW4oeC5pbnB1dCwgeC5vdXRwdXQpOyB9KTtcclxuICAgIH07XHJcbiAgICBUcmFpbmluZ0RhdGEucHJvdG90eXBlLnRyYWluID0gZnVuY3Rpb24gKGlucHV0LCBvdXRwdXQpIHtcclxuICAgICAgICB0aGlzLmRhdGEucHVzaChuZXcgVHJhaW5pbmdQYWlyKGlucHV0LCBvdXRwdXQpKTtcclxuICAgIH07XHJcbiAgICBUcmFpbmluZ0RhdGEucHJvdG90eXBlLnNodWZmbGUgPSBmdW5jdGlvbiAoKSB7XHJcbiAgICAgICAgdGhpcy5kYXRhID0gVXRpbF8xLlV0aWwuc2h1ZmZsZSh0aGlzLmRhdGEpO1xyXG4gICAgfTtcclxuICAgIFRyYWluaW5nRGF0YS5wcm90b3R5cGUucmVzZXQgPSBmdW5jdGlvbiAoKSB7XHJcbiAgICAgICAgdGhpcy5iYXRjaEl0ZXJhdG9yID0gMDtcclxuICAgICAgICB0aGlzLnNodWZmbGUoKTtcclxuICAgIH07XHJcbiAgICBUcmFpbmluZ0RhdGEucHJvdG90eXBlLmdldEJhdGNoID0gZnVuY3Rpb24gKGJhdGNoU2l6ZSkge1xyXG4gICAgICAgIHZhciByZXN1bHQgPSBbXTtcclxuICAgICAgICBmb3IgKHZhciBpID0gMDsgaSA8IGJhdGNoU2l6ZTsgKytpKSB7XHJcbiAgICAgICAgICAgIGlmIChpICsgdGhpcy5iYXRjaEl0ZXJhdG9yID4gdGhpcy5kYXRhLmxlbmd0aCAtIDEpXHJcbiAgICAgICAgICAgICAgICBicmVhaztcclxuICAgICAgICAgICAgcmVzdWx0LnB1c2godGhpcy5kYXRhW2kgKyB0aGlzLmJhdGNoSXRlcmF0b3JdKTtcclxuICAgICAgICB9XHJcbiAgICAgICAgdGhpcy5iYXRjaEl0ZXJhdG9yICs9IGJhdGNoU2l6ZTtcclxuICAgICAgICByZXR1cm4gcmVzdWx0O1xyXG4gICAgfTtcclxuICAgIFRyYWluaW5nRGF0YS5wcm90b3R5cGUuc3BsaXQgPSBmdW5jdGlvbiAocmF0aW8pIHtcclxuICAgICAgICBpZiAocmF0aW8gPCAwIHx8IHJhdGlvID4gMSlcclxuICAgICAgICAgICAgcmV0dXJuIG5ldyBUcmFpbmluZ0RhdGEoKTtcclxuICAgICAgICB2YXIgcmVtb3ZlQ291bnQgPSBNYXRoLmZsb29yKHRoaXMuZGF0YS5sZW5ndGggKiByYXRpbyk7XHJcbiAgICAgICAgdmFyIGtlZXBDb3VudCA9IHRoaXMuZGF0YS5sZW5ndGggLSByZW1vdmVDb3VudDtcclxuICAgICAgICB2YXIgbmV3RGF0YSA9IG5ldyBUcmFpbmluZ0RhdGEoKTtcclxuICAgICAgICBmb3IgKHZhciBpID0gMDsgaSA8IHJlbW92ZUNvdW50OyArK2kpIHtcclxuICAgICAgICAgICAgbmV3RGF0YS5kYXRhLnB1c2godGhpcy5kYXRhW2tlZXBDb3VudCArIGldKTtcclxuICAgICAgICB9XHJcbiAgICAgICAgdGhpcy5kYXRhLmxlbmd0aCA9IGtlZXBDb3VudDtcclxuICAgICAgICByZXR1cm4gbmV3RGF0YTtcclxuICAgIH07XHJcbiAgICByZXR1cm4gVHJhaW5pbmdEYXRhO1xyXG59KCkpO1xyXG5leHBvcnRzLlRyYWluaW5nRGF0YSA9IFRyYWluaW5nRGF0YTtcclxuXG5cblxuLy8vLy8vLy8vLy8vLy8vLy8vXG4vLyBXRUJQQUNLIEZPT1RFUlxuLy8gLi9zcmMvbm4vVHJhaW5pbmdEYXRhLnRzXG4vLyBtb2R1bGUgaWQgPSA0XG4vLyBtb2R1bGUgY2h1bmtzID0gMCJdLCJzb3VyY2VSb290IjoiIn0=");

/***/ },
/* 5 */
/***/ function(module, exports, __webpack_require__) {

"use strict";
eval("/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0____ = __webpack_require__(1);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_____default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_0____);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__prepareNN__ = __webpack_require__(7);\n\r\n\r\n\r\n\r\nvar World = {\r\n  imgWidth: 0,\r\n  imgHeight: 0,\r\n  img: 0,\r\n  inCanvas: document.getElementById(\"fromCanvas\"),\r\n  outCanvas: document.getElementById(\"outCanvas\"),\r\n};\r\nWorld.inCtx = World.inCanvas.getContext('2d');\r\nWorld.outCtx = World.outCanvas.getContext('2d');\r\nwindow.World = World;\r\n\r\n$(main);\r\nfunction main(){\r\n\r\n  return loadImage().then(img => {\r\n    World.img = img;\r\n    World.imgWidth = img.width;\r\n    World.imgHeight = img.height;\r\n\r\n    World.outCanvas.width = World.imgWidth;\r\n    World.outCanvas.height = World.imgHeight;\r\n    World.inCanvas.width = World.imgWidth;\r\n    World.inCanvas.height = World.imgHeight;\r\n    World.inCtx.drawImage(World.img, 0, 0);\r\n\r\n  });\r\n\r\n}\r\n\r\nwindow.startNN = function(){\r\n  main().then(() => {\r\n\r\n    $(\"#epochCanvases\").text();\r\n\r\n    console.log(\"Preparing neural network...\");\r\n    var { nn, trainingData, testData } = __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_1__prepareNN__[\"a\" /* prepareNN */])(World);\r\n    console.log(\"Running neural network...\");\r\n\r\n    run(nn, trainingData, testData);\r\n\r\n    feedForwardImage(nn);\r\n  });\r\n\r\n}\r\n\r\nfunction loadImage(){\r\n  return new Promise((resolve, reject) => {\r\n    var img = new Image();\r\n    //img.src = 'static/house.jpg';\r\n    img.src = $(\"#image\").val() || 'static/cb2.jpg';\r\n    img.onload = () => resolve(img);\r\n  });\r\n}\r\n\r\n\r\nfunction run(nn, trainingData, testData) {\r\n\r\n  console.log(trainingData, testData);\r\n\r\n  var epochs = parseInt($(\"#epochs\").val()); //40; //30; //10;\r\n  var miniBatchSize = Math.floor(trainingData.data.length / 10);\r\n  var eta = nn.learningRateEta;\r\n  var printer = function(){ feedForwardImage(nn) }; // <--- draw between each epoch\r\n  //var printer = () => { nn.learningRateEta--; };\r\n  //var printer = () => { };\r\n  nn.stochasticGradientDescent(trainingData, epochs, miniBatchSize, eta, printer, testData);\r\n\r\n}\r\n\r\nfunction feedForwardImage(nn){\r\n\r\n  console.log(\"+ feedforward ---\");\r\n  var imgData = World.outCtx.getImageData(0, 0, World.imgWidth, World.imgHeight);\r\n\r\n  for(var i=0; i < World.imgHeight; ++i){\r\n    for(var j=0; j < World.imgWidth; ++j){\r\n      var index = i * World.imgWidth + j;\r\n\r\n      var qx = __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_1__prepareNN__[\"b\" /* positionToQuadrants */])(i, World.imgHeight, __WEBPACK_IMPORTED_MODULE_1__prepareNN__[\"c\" /* QUADRANTS_DEPTH */]);\r\n      var qy = __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_1__prepareNN__[\"b\" /* positionToQuadrants */])(j, World.imgWidth, __WEBPACK_IMPORTED_MODULE_1__prepareNN__[\"c\" /* QUADRANTS_DEPTH */]);\r\n\r\n      var out = nn.feedForward([...qx, ...qy]);\r\n      var {r, g, b} = __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_1__prepareNN__[\"d\" /* colorFrom48Bit */])(out);\r\n\r\n      imgData.data[4 * index + 0] = r;\r\n      imgData.data[4 * index + 1] = g;\r\n      imgData.data[4 * index + 2] = b;\r\n      imgData.data[4 * index + 3] = 255;\r\n    }\r\n  }\r\n  console.log(\"- feedforward --- drawing\");\r\n  World.outCtx.putImageData(imgData, 0, 0);\r\n\r\n  var newCanvas = $(\"<canvas></canvas>\");\r\n  $(\"#epochCanvases\").append(newCanvas);\r\n  var newCtx = newCanvas[0].getContext('2d');\r\n  newCanvas[0].width = World.outCtx.canvas.width / 2;\r\n  newCanvas[0].height = World.outCtx.canvas.height / 2;\r\n  newCtx.drawImage(World.outCtx.canvas, 0, 0, newCanvas[0].width, newCanvas[0].height);\r\n}\r\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9zcmMvaW1hZ2UvbWFpbi5qcz8yYzY5Il0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7Ozs7QUFDd0I7QUFDa0Q7O0FBRTFFO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQSxHQUFHOztBQUVIOztBQUVBO0FBQ0E7O0FBRUE7O0FBRUE7QUFDQSxTQUFTLDZCQUE2QjtBQUN0Qzs7QUFFQTs7QUFFQTtBQUNBLEdBQUc7O0FBRUg7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsR0FBRztBQUNIOzs7QUFHQTs7QUFFQTs7QUFFQSw0Q0FBNEMsTUFBTSxNQUFNO0FBQ3hEO0FBQ0E7QUFDQSwyQkFBMkIsd0JBQXdCO0FBQ25ELHlCQUF5QixzQkFBc0I7QUFDL0MseUJBQXlCO0FBQ3pCOztBQUVBOztBQUVBOztBQUVBO0FBQ0E7O0FBRUEsY0FBYyxxQkFBcUI7QUFDbkMsZ0JBQWdCLG9CQUFvQjtBQUNwQzs7QUFFQTtBQUNBOztBQUVBO0FBQ0EsV0FBVyxRQUFROztBQUVuQjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBIiwiZmlsZSI6IjUuanMiLCJzb3VyY2VzQ29udGVudCI6WyJcclxuaW1wb3J0IHsgTmV1cmFsTmV0d29yayB9IGZyb20gJy4uLyc7XHJcbmltcG9ydCB7IHByZXBhcmVOTiwgUVVBRFJBTlRTX0RFUFRILCBjb2xvckZyb200OEJpdCwgcG9zaXRpb25Ub1F1YWRyYW50cyB9IGZyb20gJy4vcHJlcGFyZU5OJztcclxuXHJcbnZhciBXb3JsZCA9IHtcclxuICBpbWdXaWR0aDogMCxcclxuICBpbWdIZWlnaHQ6IDAsXHJcbiAgaW1nOiAwLFxyXG4gIGluQ2FudmFzOiBkb2N1bWVudC5nZXRFbGVtZW50QnlJZChcImZyb21DYW52YXNcIiksXHJcbiAgb3V0Q2FudmFzOiBkb2N1bWVudC5nZXRFbGVtZW50QnlJZChcIm91dENhbnZhc1wiKSxcclxufTtcclxuV29ybGQuaW5DdHggPSBXb3JsZC5pbkNhbnZhcy5nZXRDb250ZXh0KCcyZCcpO1xyXG5Xb3JsZC5vdXRDdHggPSBXb3JsZC5vdXRDYW52YXMuZ2V0Q29udGV4dCgnMmQnKTtcclxud2luZG93LldvcmxkID0gV29ybGQ7XHJcblxyXG4kKG1haW4pO1xyXG5mdW5jdGlvbiBtYWluKCl7XHJcblxyXG4gIHJldHVybiBsb2FkSW1hZ2UoKS50aGVuKGltZyA9PiB7XHJcbiAgICBXb3JsZC5pbWcgPSBpbWc7XHJcbiAgICBXb3JsZC5pbWdXaWR0aCA9IGltZy53aWR0aDtcclxuICAgIFdvcmxkLmltZ0hlaWdodCA9IGltZy5oZWlnaHQ7XHJcblxyXG4gICAgV29ybGQub3V0Q2FudmFzLndpZHRoID0gV29ybGQuaW1nV2lkdGg7XHJcbiAgICBXb3JsZC5vdXRDYW52YXMuaGVpZ2h0ID0gV29ybGQuaW1nSGVpZ2h0O1xyXG4gICAgV29ybGQuaW5DYW52YXMud2lkdGggPSBXb3JsZC5pbWdXaWR0aDtcclxuICAgIFdvcmxkLmluQ2FudmFzLmhlaWdodCA9IFdvcmxkLmltZ0hlaWdodDtcclxuICAgIFdvcmxkLmluQ3R4LmRyYXdJbWFnZShXb3JsZC5pbWcsIDAsIDApO1xyXG5cclxuICB9KTtcclxuXHJcbn1cclxuXHJcbndpbmRvdy5zdGFydE5OID0gZnVuY3Rpb24oKXtcclxuICBtYWluKCkudGhlbigoKSA9PiB7XHJcblxyXG4gICAgJChcIiNlcG9jaENhbnZhc2VzXCIpLnRleHQoKTtcclxuXHJcbiAgICBjb25zb2xlLmxvZyhcIlByZXBhcmluZyBuZXVyYWwgbmV0d29yay4uLlwiKTtcclxuICAgIHZhciB7IG5uLCB0cmFpbmluZ0RhdGEsIHRlc3REYXRhIH0gPSBwcmVwYXJlTk4oV29ybGQpO1xyXG4gICAgY29uc29sZS5sb2coXCJSdW5uaW5nIG5ldXJhbCBuZXR3b3JrLi4uXCIpO1xyXG5cclxuICAgIHJ1bihubiwgdHJhaW5pbmdEYXRhLCB0ZXN0RGF0YSk7XHJcblxyXG4gICAgZmVlZEZvcndhcmRJbWFnZShubik7XHJcbiAgfSk7XHJcblxyXG59XHJcblxyXG5mdW5jdGlvbiBsb2FkSW1hZ2UoKXtcclxuICByZXR1cm4gbmV3IFByb21pc2UoKHJlc29sdmUsIHJlamVjdCkgPT4ge1xyXG4gICAgdmFyIGltZyA9IG5ldyBJbWFnZSgpO1xyXG4gICAgLy9pbWcuc3JjID0gJ3N0YXRpYy9ob3VzZS5qcGcnO1xyXG4gICAgaW1nLnNyYyA9ICQoXCIjaW1hZ2VcIikudmFsKCkgfHwgJ3N0YXRpYy9jYjIuanBnJztcclxuICAgIGltZy5vbmxvYWQgPSAoKSA9PiByZXNvbHZlKGltZyk7XHJcbiAgfSk7XHJcbn1cclxuXHJcblxyXG5mdW5jdGlvbiBydW4obm4sIHRyYWluaW5nRGF0YSwgdGVzdERhdGEpIHtcclxuXHJcbiAgY29uc29sZS5sb2codHJhaW5pbmdEYXRhLCB0ZXN0RGF0YSk7XHJcblxyXG4gIHZhciBlcG9jaHMgPSBwYXJzZUludCgkKFwiI2Vwb2Noc1wiKS52YWwoKSk7IC8vNDA7IC8vMzA7IC8vMTA7XHJcbiAgdmFyIG1pbmlCYXRjaFNpemUgPSBNYXRoLmZsb29yKHRyYWluaW5nRGF0YS5kYXRhLmxlbmd0aCAvIDEwKTtcclxuICB2YXIgZXRhID0gbm4ubGVhcm5pbmdSYXRlRXRhO1xyXG4gIHZhciBwcmludGVyID0gZnVuY3Rpb24oKXsgZmVlZEZvcndhcmRJbWFnZShubikgfTsgLy8gPC0tLSBkcmF3IGJldHdlZW4gZWFjaCBlcG9jaFxyXG4gIC8vdmFyIHByaW50ZXIgPSAoKSA9PiB7IG5uLmxlYXJuaW5nUmF0ZUV0YS0tOyB9O1xyXG4gIC8vdmFyIHByaW50ZXIgPSAoKSA9PiB7IH07XHJcbiAgbm4uc3RvY2hhc3RpY0dyYWRpZW50RGVzY2VudCh0cmFpbmluZ0RhdGEsIGVwb2NocywgbWluaUJhdGNoU2l6ZSwgZXRhLCBwcmludGVyLCB0ZXN0RGF0YSk7XHJcblxyXG59XHJcblxyXG5mdW5jdGlvbiBmZWVkRm9yd2FyZEltYWdlKG5uKXtcclxuXHJcbiAgY29uc29sZS5sb2coXCIrIGZlZWRmb3J3YXJkIC0tLVwiKTtcclxuICB2YXIgaW1nRGF0YSA9IFdvcmxkLm91dEN0eC5nZXRJbWFnZURhdGEoMCwgMCwgV29ybGQuaW1nV2lkdGgsIFdvcmxkLmltZ0hlaWdodCk7XHJcblxyXG4gIGZvcih2YXIgaT0wOyBpIDwgV29ybGQuaW1nSGVpZ2h0OyArK2kpe1xyXG4gICAgZm9yKHZhciBqPTA7IGogPCBXb3JsZC5pbWdXaWR0aDsgKytqKXtcclxuICAgICAgdmFyIGluZGV4ID0gaSAqIFdvcmxkLmltZ1dpZHRoICsgajtcclxuXHJcbiAgICAgIHZhciBxeCA9IHBvc2l0aW9uVG9RdWFkcmFudHMoaSwgV29ybGQuaW1nSGVpZ2h0LCBRVUFEUkFOVFNfREVQVEgpO1xyXG4gICAgICB2YXIgcXkgPSBwb3NpdGlvblRvUXVhZHJhbnRzKGosIFdvcmxkLmltZ1dpZHRoLCBRVUFEUkFOVFNfREVQVEgpO1xyXG5cclxuICAgICAgdmFyIG91dCA9IG5uLmZlZWRGb3J3YXJkKFsuLi5xeCwgLi4ucXldKTtcclxuICAgICAgdmFyIHtyLCBnLCBifSA9IGNvbG9yRnJvbTQ4Qml0KG91dCk7XHJcblxyXG4gICAgICBpbWdEYXRhLmRhdGFbNCAqIGluZGV4ICsgMF0gPSByO1xyXG4gICAgICBpbWdEYXRhLmRhdGFbNCAqIGluZGV4ICsgMV0gPSBnO1xyXG4gICAgICBpbWdEYXRhLmRhdGFbNCAqIGluZGV4ICsgMl0gPSBiO1xyXG4gICAgICBpbWdEYXRhLmRhdGFbNCAqIGluZGV4ICsgM10gPSAyNTU7XHJcbiAgICB9XHJcbiAgfVxyXG4gIGNvbnNvbGUubG9nKFwiLSBmZWVkZm9yd2FyZCAtLS0gZHJhd2luZ1wiKTtcclxuICBXb3JsZC5vdXRDdHgucHV0SW1hZ2VEYXRhKGltZ0RhdGEsIDAsIDApO1xyXG5cclxuICB2YXIgbmV3Q2FudmFzID0gJChcIjxjYW52YXM+PC9jYW52YXM+XCIpO1xyXG4gICQoXCIjZXBvY2hDYW52YXNlc1wiKS5hcHBlbmQobmV3Q2FudmFzKTtcclxuICB2YXIgbmV3Q3R4ID0gbmV3Q2FudmFzWzBdLmdldENvbnRleHQoJzJkJyk7XHJcbiAgbmV3Q2FudmFzWzBdLndpZHRoID0gV29ybGQub3V0Q3R4LmNhbnZhcy53aWR0aCAvIDI7XHJcbiAgbmV3Q2FudmFzWzBdLmhlaWdodCA9IFdvcmxkLm91dEN0eC5jYW52YXMuaGVpZ2h0IC8gMjtcclxuICBuZXdDdHguZHJhd0ltYWdlKFdvcmxkLm91dEN0eC5jYW52YXMsIDAsIDAsIG5ld0NhbnZhc1swXS53aWR0aCwgbmV3Q2FudmFzWzBdLmhlaWdodCk7XHJcbn1cclxuXG5cblxuLy8vLy8vLy8vLy8vLy8vLy8vXG4vLyBXRUJQQUNLIEZPT1RFUlxuLy8gLi9zcmMvaW1hZ2UvbWFpbi5qc1xuLy8gbW9kdWxlIGlkID0gNVxuLy8gbW9kdWxlIGNodW5rcyA9IDAiXSwic291cmNlUm9vdCI6IiJ9");

/***/ },
/* 6 */
/***/ function(module, exports, __webpack_require__) {

"use strict";
eval("\"use strict\";\r\nvar Util_1 = __webpack_require__(0);\r\nvar NeuronLayer_1 = __webpack_require__(3);\r\nvar TrainingData_1 = __webpack_require__(4);\r\nfunction def(thing) {\r\n    return typeof thing !== \"undefined\";\r\n}\r\nvar NeuralNetwork = (function () {\r\n    function NeuralNetwork(args) {\r\n        this.numInputs = 9;\r\n        this.numHiddenLayers = 2;\r\n        this.neuronsPerHiddenLayer = 6;\r\n        this.numOutputs = 5;\r\n        this.networkEvaluationSuccessThreshold = 0.01;\r\n        this.learningRateEta = 0.01;\r\n        if (!args)\r\n            args = {};\r\n        if (def(args.numInputs))\r\n            this.numInputs = args.numInputs;\r\n        if (def(args.numHiddenLayers))\r\n            this.numHiddenLayers = args.numHiddenLayers;\r\n        if (def(args.neuronsPerHiddenLayer))\r\n            this.neuronsPerHiddenLayer = args.neuronsPerHiddenLayer;\r\n        if (def(args.numOutputs))\r\n            this.numOutputs = args.numOutputs;\r\n        if (def(args.networkEvaluationSuccessThreshold))\r\n            this.networkEvaluationSuccessThreshold = args.networkEvaluationSuccessThreshold;\r\n        if (def(args.learningRateEta))\r\n            this.learningRateEta = args.learningRateEta;\r\n        this.layers = [];\r\n        var inputs = this.numInputs;\r\n        for (var i = 0; i < this.numHiddenLayers; ++i) {\r\n            this.layers.push(new NeuronLayer_1.NeuronLayer(inputs, this.neuronsPerHiddenLayer));\r\n            inputs = this.neuronsPerHiddenLayer;\r\n        }\r\n        this.layers.push(new NeuronLayer_1.NeuronLayer(inputs, this.numOutputs));\r\n    }\r\n    NeuralNetwork.prototype.feedForward = function (inputs) {\r\n        var outputs = inputs.slice();\r\n        for (var i = 0; i < this.layers.length; ++i) {\r\n            outputs = this.layers[i].feedForward(outputs);\r\n        }\r\n        return outputs;\r\n    };\r\n    NeuralNetwork.prototype.export = function (weights, offset) {\r\n        for (var i = 0; i < this.numInputs; ++i) {\r\n            offset = this.layers[i].export(weights, offset);\r\n        }\r\n        return offset;\r\n    };\r\n    NeuralNetwork.prototype.import = function (weights, offset) {\r\n        for (var i = 0; i < this.numInputs; ++i) {\r\n            offset = this.layers[i].import(weights, offset);\r\n        }\r\n        return offset;\r\n    };\r\n    NeuralNetwork.prototype.evaluate = function (testData, threshold) {\r\n        threshold = threshold || this.networkEvaluationSuccessThreshold;\r\n        var successes = 0;\r\n        for (var i = 0; i < testData.data.length; ++i) {\r\n            var result = this.evaluatePair(testData.data[i], threshold);\r\n            if (result < 0)\r\n                return result;\r\n            successes += result;\r\n        }\r\n        return successes;\r\n    };\r\n    NeuralNetwork.prototype.evaluatePair = function (testPair, threshold) {\r\n        threshold = threshold || this.networkEvaluationSuccessThreshold;\r\n        var output = this.feedForward(testPair.input);\r\n        var amount = output.length;\r\n        if (amount != testPair.output.length)\r\n            return -1;\r\n        for (var i = 0; i < amount; ++i) {\r\n            var diff = testPair.output[i] - output[i];\r\n            if (Math.abs(diff) > threshold)\r\n                return 0;\r\n        }\r\n        return 1;\r\n    };\r\n    NeuralNetwork.prototype.stochasticGradientDescent = function (trainingData, epochs, miniBatchSize, eta, printer, testData) {\r\n        var _this = this;\r\n        var doEvaluation = typeof (printer) == \"function\"\r\n            && (testData instanceof TrainingData_1.TrainingData)\r\n            && testData.data.length > 0;\r\n        var i = 0;\r\n        var loop = function () {\r\n            trainingData.reset();\r\n            for (var j = 0; j < trainingData.data.length / miniBatchSize; ++j) {\r\n                _this.updateMiniBatch(trainingData, miniBatchSize, eta);\r\n            }\r\n            if (doEvaluation) {\r\n                _this.logEpochEvaluation(i, printer, testData);\r\n            }\r\n            i++;\r\n            if (i < epochs)\r\n                setTimeout(loop, 0);\r\n        };\r\n        setTimeout(loop, 0);\r\n    };\r\n    NeuralNetwork.prototype.logEpochEvaluation = function (epoch, printer, testData) {\r\n        console.log(\"Epoch: \" + epoch + \": \" + this.evaluate(testData) + \" / \" + testData.data.length);\r\n        printer(\"Epoch: \" + epoch + \": \" + this.evaluate(testData) + \" / \" + testData.data.length);\r\n    };\r\n    NeuralNetwork.prototype.updateMiniBatch = function (trainingData, miniBatchSize, eta) {\r\n        var nabla_b = [];\r\n        var nabla_w = [];\r\n        var batch = trainingData.getBatch(miniBatchSize);\r\n        if (batch.length <= 0)\r\n            return;\r\n        for (var b = 0; b < batch.length; ++b) {\r\n            var res = this.backprop(batch[b].input, batch[b].output);\r\n            var delta_nabla_b = res[0];\r\n            var delta_nabla_w = res[1];\r\n            for (var j = 0; j < delta_nabla_b.length; ++j) {\r\n                if (b == 0)\r\n                    nabla_b.push([]);\r\n                for (var k = 0; k < delta_nabla_b[j].length; ++k) {\r\n                    if (b == 0)\r\n                        nabla_b[j].push(0);\r\n                    nabla_b[j][k] += delta_nabla_b[j][k];\r\n                }\r\n            }\r\n            for (var i = 0; i < delta_nabla_w.length; ++i) {\r\n                if (b == 0)\r\n                    nabla_w.push([]);\r\n                for (var j = 0; j < delta_nabla_w[i].length; ++j) {\r\n                    if (b == 0)\r\n                        nabla_w[i].push([]);\r\n                    for (var k = 0; k < delta_nabla_w[i][j].length; ++k) {\r\n                        if (b == 0)\r\n                            nabla_w[i][j].push(0);\r\n                        nabla_w[i][j][k] += delta_nabla_w[i][j][k];\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        for (var l = 0; l < this.layers.length; ++l) {\r\n            var weights = this.layers[l].getWeights();\r\n            for (var i = 0; i < weights.length; ++i) {\r\n                for (var j = 0; j < weights[i].length; ++j) {\r\n                    var w = weights[i][j];\r\n                    var nw = nabla_w[l][i][j];\r\n                    weights[i][j] = w - (eta / batch.length) * nw;\r\n                }\r\n            }\r\n            this.layers[l].putWeights(weights);\r\n            var biases = this.layers[l].getBiases();\r\n            for (var i = 0; i < biases.length; ++i) {\r\n                var b = biases[i];\r\n                var nb = nabla_b[l][i];\r\n                biases[i] = b - (eta / batch.length) * nb;\r\n            }\r\n            this.layers[l].putBiases(biases);\r\n        }\r\n    };\r\n    NeuralNetwork.prototype.backprop = function (input, output) {\r\n        var nabla_b = [];\r\n        var nabla_w = [];\r\n        var activations = [];\r\n        activations.push(input.slice());\r\n        var zs = [];\r\n        var activation = input;\r\n        for (var i = 0; i < this.layers.length; ++i) {\r\n            var z = this.layers[i].feedForwardRaw(activation);\r\n            zs.push(z);\r\n            activation = z.map(function (x) { return Util_1.Util.sigmoid(x); });\r\n            activations.push(activation);\r\n        }\r\n        var delta = Util_1.Util.hadamard(this.costDerivative(activations[activations.length - 1], output), zs[zs.length - 1].map(function (x) { return Util_1.Util.sigmoidPrime(x); }));\r\n        nabla_b.push([].slice.call(delta));\r\n        nabla_w.push(this.costChangeWRTWeight(delta, activations[activations.length - 2]));\r\n        for (var l = 2; l <= this.layers.length; ++l) {\r\n            var z = zs[zs.length - l];\r\n            var currentWeights = this.layers[this.layers.length - l + 1].getWeights();\r\n            var dotResult = this.transposeMatrixDot(currentWeights, delta);\r\n            delta = Util_1.Util.hadamard(dotResult, z.map(function (x) { return Util_1.Util.sigmoidPrime(x); }));\r\n            nabla_b.push([].slice.call(delta.slice()));\r\n            nabla_w.push(this.costChangeWRTWeight(delta, activations[activations.length - l - 1]));\r\n        }\r\n        nabla_b.reverse();\r\n        nabla_w.reverse();\r\n        return [nabla_b, nabla_w];\r\n    };\r\n    NeuralNetwork.prototype.costDerivative = function (outputActivations, testOutput) {\r\n        if (outputActivations.length != testOutput.length)\r\n            throw \"NN.costDerivative: a and output different sizes\";\r\n        var result = outputActivations.slice();\r\n        for (var i = 0; i < result.length; ++i) {\r\n            result[i] -= testOutput[i];\r\n        }\r\n        return result;\r\n    };\r\n    NeuralNetwork.prototype.costChangeWRTWeight = function (delta, activation) {\r\n        var dCdw = [];\r\n        for (var j = 0; j < delta.length; ++j) {\r\n            dCdw.push([]);\r\n            for (var k = 0; k < activation.length; ++k) {\r\n                dCdw[j].push(delta[j] * activation[k]);\r\n            }\r\n        }\r\n        return dCdw;\r\n    };\r\n    NeuralNetwork.prototype.transposeMatrixDot = function (w, delta) {\r\n        if (w.length != delta.length)\r\n            throw \"NN.transposeMatrixDot: w and delta different sizes\";\r\n        var result = [];\r\n        for (var j = 0; j < w[0].length; ++j) {\r\n            var d = 0;\r\n            for (var i = 0; i < w.length; ++i) {\r\n                d += w[i][j] * delta[i];\r\n            }\r\n            result.push(d);\r\n        }\r\n        return result;\r\n    };\r\n    return NeuralNetwork;\r\n}());\r\nexports.NeuralNetwork = NeuralNetwork;\r\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,");

/***/ },
/* 7 */
/***/ function(module, exports, __webpack_require__) {

"use strict";
eval("/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0____ = __webpack_require__(1);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_____default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_0____);\n/* harmony export (immutable) */ exports[\"a\"] = prepareNN;\n/* unused harmony export colorTo48Bit */\n/* harmony export (immutable) */ exports[\"d\"] = colorFrom48Bit;\n/* harmony export (immutable) */ exports[\"b\"] = positionToQuadrants;\n\r\n\r\n\r\nconst QUADRANTS_DEPTH = 8;\n/* harmony export (immutable) */ exports[\"c\"] = QUADRANTS_DEPTH;\n // Split into quadrants 8 times.\r\nconst BIT_COLORS = false;\n/* unused harmony export BIT_COLORS */\n\r\n\r\nfunction prepareNN(World) {\r\n  var nn = new __WEBPACK_IMPORTED_MODULE_0____[\"NeuralNetwork\"]({\r\n    numInputs: 2 * QUADRANTS_DEPTH, // x, y position in quadrant space\r\n    numHiddenLayers: parseInt($(\"#numHiddenLayers\").val()) || 1, //1,\r\n    neuronsPerHiddenLayer: parseInt($(\"#neuronsPerHiddenLayer\").val()) || 45, //7,\r\n    numOutputs: BIT_COLORS ? 16 * 3 : 3, // r, g, b, each with 16 values 00 - ff\r\n    networkEvaluationSuccessThreshold: 0.1, //0.65, //0.01,\r\n    learningRateEta: (1 * $(\"#learningRateEta\").val()) || 18, //4, //0.05, //0.4,\r\n  });\r\n  /*var trainingData = new TrainingData();\r\n  for(var i=0; i < data.imgs.length; ++i){\r\n    trainingData.train([].slice.call(data.imgs[i].imgData), data.imgs[i].valToArr());\r\n  }*/\r\n  var trainingData = getTrainingData(World);\r\n  var testData = trainingData.split(0.2);\r\n\r\n  return { nn, trainingData, testData };\r\n}\r\n\r\nfunction getTrainingData(World){\r\n  var imgData = World.inCtx.getImageData(0, 0, World.imgWidth, World.imgHeight);\r\n\r\n  var trainingData = new __WEBPACK_IMPORTED_MODULE_0____[\"TrainingData\"]();\r\n\r\n  var HeightLimit = World.imgHeight; //World.imgHeight; // 50, 158\r\n  var WidthLimit = World.imgWidth; //World.imgWidth; // 50\r\n\r\n  for(var i=0; i < HeightLimit; ++i){\r\n    for(var j=0; j < WidthLimit; ++j){\r\n      var index = i * World.imgWidth + j;\r\n      var r = imgData.data[4 * index + 0];\r\n      var g = imgData.data[4 * index + 1];\r\n      var b = imgData.data[4 * index + 2];\r\n      var qx = positionToQuadrants(i, World.imgHeight, QUADRANTS_DEPTH);\r\n      var qy = positionToQuadrants(j, World.imgWidth, QUADRANTS_DEPTH);\r\n      //console.log([index, i, j], '=>', colorTo48Bit(r, g, b))\r\n      trainingData.train([...qx, ...qy], colorTo48Bit(r, g, b));\r\n    }\r\n  }\r\n\r\n  return trainingData;\r\n}\r\n\r\nfunction colorTo48Bit(r, g, b){\r\n  if(!BIT_COLORS){\r\n    return [r / 255, g / 255, b / 255];\r\n  }\r\n  var r = Math.floor(r / 16);\r\n  var g = Math.floor(g / 16);\r\n  var b = Math.floor(b / 16);\r\n  var out = [];\r\n  // Make the output bitwise yes or no for if the color is each value.\r\n  for(var i=0; i < 16; ++i) out[i +  0] = 1 * (i == r);\r\n  for(var i=0; i < 16; ++i) out[i + 16] = 1 * (i == g);\r\n  for(var i=0; i < 16; ++i) out[i + 32] = 1 * (i == b);\r\n  return out;\r\n}\r\n\r\nfunction colorFrom48Bit(arr){\r\n  if(!BIT_COLORS){\r\n    return { r: arr[0] * 255, g: arr[1] * 255, b: arr[2] * 255};\r\n  }\r\n  var rs = arr.slice(0, 16);\r\n  var gs = arr.slice(16, 32);\r\n  var bs = arr.slice(32, 48);\r\n  var r = rs.indexOf(Math.max.apply(null, rs));\r\n  var g = gs.indexOf(Math.max.apply(null, gs));\r\n  var b = bs.indexOf(Math.max.apply(null, bs));\r\n  return { r: 16 * r, g: 16 * g, b: 16 * b};\r\n}\r\n\r\nfunction positionToQuadrants(x, maxX, depth){\r\n  var out = [];\r\n  for(var i=0; i < depth; ++i){\r\n    if(x < maxX / 2){\r\n      out[i] = 0; // 0 = left half of each sub half\r\n      maxX = maxX / 2;\r\n    }else{\r\n      out[i] = 1;\r\n      x -= maxX / 2;\r\n      maxX = maxX / 2;\r\n    }\r\n  }\r\n  return out;\r\n}\r\nwindow.positionToQuadrants = positionToQuadrants;\r\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9zcmMvaW1hZ2UvcHJlcGFyZU5OLmpzP2JkNTEiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7Ozs7OztBQUNzQzs7QUFFdEMsMEJBQWlDO0FBQUE7QUFBQTtBQUNqQztBQUFBO0FBQUE7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEdBQUc7QUFDSDtBQUNBLGNBQWMsc0JBQXNCO0FBQ3BDO0FBQ0EsR0FBRztBQUNIO0FBQ0E7O0FBRUEsVUFBVTtBQUNWOztBQUVBO0FBQ0E7O0FBRUE7O0FBRUEsb0NBQW9DLG1CQUFtQjtBQUN2RCxrQ0FBa0Msa0JBQWtCOztBQUVwRCxjQUFjLGlCQUFpQjtBQUMvQixnQkFBZ0IsZ0JBQWdCO0FBQ2hDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsY0FBYyxRQUFRO0FBQ3RCLGNBQWMsUUFBUTtBQUN0QixjQUFjLFFBQVE7QUFDdEI7QUFDQTs7QUFFQTtBQUNBO0FBQ0EsWUFBWTtBQUNaO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsVUFBVTtBQUNWOztBQUVBO0FBQ0E7QUFDQSxjQUFjLFdBQVc7QUFDekI7QUFDQSxpQkFBaUI7QUFDakI7QUFDQSxLQUFLO0FBQ0w7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSIsImZpbGUiOiI3LmpzIiwic291cmNlc0NvbnRlbnQiOlsiXHJcbmltcG9ydCB7IE5ldXJhbE5ldHdvcmssIFRyYWluaW5nRGF0YSB9IGZyb20gJy4uLyc7XHJcblxyXG5leHBvcnQgY29uc3QgUVVBRFJBTlRTX0RFUFRIID0gODsgLy8gU3BsaXQgaW50byBxdWFkcmFudHMgOCB0aW1lcy5cclxuZXhwb3J0IGNvbnN0IEJJVF9DT0xPUlMgPSBmYWxzZTtcclxuXHJcbmV4cG9ydCBmdW5jdGlvbiBwcmVwYXJlTk4oV29ybGQpIHtcclxuICB2YXIgbm4gPSBuZXcgTmV1cmFsTmV0d29yayh7XHJcbiAgICBudW1JbnB1dHM6IDIgKiBRVUFEUkFOVFNfREVQVEgsIC8vIHgsIHkgcG9zaXRpb24gaW4gcXVhZHJhbnQgc3BhY2VcclxuICAgIG51bUhpZGRlbkxheWVyczogcGFyc2VJbnQoJChcIiNudW1IaWRkZW5MYXllcnNcIikudmFsKCkpIHx8IDEsIC8vMSxcclxuICAgIG5ldXJvbnNQZXJIaWRkZW5MYXllcjogcGFyc2VJbnQoJChcIiNuZXVyb25zUGVySGlkZGVuTGF5ZXJcIikudmFsKCkpIHx8IDQ1LCAvLzcsXHJcbiAgICBudW1PdXRwdXRzOiBCSVRfQ09MT1JTID8gMTYgKiAzIDogMywgLy8gciwgZywgYiwgZWFjaCB3aXRoIDE2IHZhbHVlcyAwMCAtIGZmXHJcbiAgICBuZXR3b3JrRXZhbHVhdGlvblN1Y2Nlc3NUaHJlc2hvbGQ6IDAuMSwgLy8wLjY1LCAvLzAuMDEsXHJcbiAgICBsZWFybmluZ1JhdGVFdGE6ICgxICogJChcIiNsZWFybmluZ1JhdGVFdGFcIikudmFsKCkpIHx8IDE4LCAvLzQsIC8vMC4wNSwgLy8wLjQsXHJcbiAgfSk7XHJcbiAgLyp2YXIgdHJhaW5pbmdEYXRhID0gbmV3IFRyYWluaW5nRGF0YSgpO1xyXG4gIGZvcih2YXIgaT0wOyBpIDwgZGF0YS5pbWdzLmxlbmd0aDsgKytpKXtcclxuICAgIHRyYWluaW5nRGF0YS50cmFpbihbXS5zbGljZS5jYWxsKGRhdGEuaW1nc1tpXS5pbWdEYXRhKSwgZGF0YS5pbWdzW2ldLnZhbFRvQXJyKCkpO1xyXG4gIH0qL1xyXG4gIHZhciB0cmFpbmluZ0RhdGEgPSBnZXRUcmFpbmluZ0RhdGEoV29ybGQpO1xyXG4gIHZhciB0ZXN0RGF0YSA9IHRyYWluaW5nRGF0YS5zcGxpdCgwLjIpO1xyXG5cclxuICByZXR1cm4geyBubiwgdHJhaW5pbmdEYXRhLCB0ZXN0RGF0YSB9O1xyXG59XHJcblxyXG5mdW5jdGlvbiBnZXRUcmFpbmluZ0RhdGEoV29ybGQpe1xyXG4gIHZhciBpbWdEYXRhID0gV29ybGQuaW5DdHguZ2V0SW1hZ2VEYXRhKDAsIDAsIFdvcmxkLmltZ1dpZHRoLCBXb3JsZC5pbWdIZWlnaHQpO1xyXG5cclxuICB2YXIgdHJhaW5pbmdEYXRhID0gbmV3IFRyYWluaW5nRGF0YSgpO1xyXG5cclxuICB2YXIgSGVpZ2h0TGltaXQgPSBXb3JsZC5pbWdIZWlnaHQ7IC8vV29ybGQuaW1nSGVpZ2h0OyAvLyA1MCwgMTU4XHJcbiAgdmFyIFdpZHRoTGltaXQgPSBXb3JsZC5pbWdXaWR0aDsgLy9Xb3JsZC5pbWdXaWR0aDsgLy8gNTBcclxuXHJcbiAgZm9yKHZhciBpPTA7IGkgPCBIZWlnaHRMaW1pdDsgKytpKXtcclxuICAgIGZvcih2YXIgaj0wOyBqIDwgV2lkdGhMaW1pdDsgKytqKXtcclxuICAgICAgdmFyIGluZGV4ID0gaSAqIFdvcmxkLmltZ1dpZHRoICsgajtcclxuICAgICAgdmFyIHIgPSBpbWdEYXRhLmRhdGFbNCAqIGluZGV4ICsgMF07XHJcbiAgICAgIHZhciBnID0gaW1nRGF0YS5kYXRhWzQgKiBpbmRleCArIDFdO1xyXG4gICAgICB2YXIgYiA9IGltZ0RhdGEuZGF0YVs0ICogaW5kZXggKyAyXTtcclxuICAgICAgdmFyIHF4ID0gcG9zaXRpb25Ub1F1YWRyYW50cyhpLCBXb3JsZC5pbWdIZWlnaHQsIFFVQURSQU5UU19ERVBUSCk7XHJcbiAgICAgIHZhciBxeSA9IHBvc2l0aW9uVG9RdWFkcmFudHMoaiwgV29ybGQuaW1nV2lkdGgsIFFVQURSQU5UU19ERVBUSCk7XHJcbiAgICAgIC8vY29uc29sZS5sb2coW2luZGV4LCBpLCBqXSwgJz0+JywgY29sb3JUbzQ4Qml0KHIsIGcsIGIpKVxyXG4gICAgICB0cmFpbmluZ0RhdGEudHJhaW4oWy4uLnF4LCAuLi5xeV0sIGNvbG9yVG80OEJpdChyLCBnLCBiKSk7XHJcbiAgICB9XHJcbiAgfVxyXG5cclxuICByZXR1cm4gdHJhaW5pbmdEYXRhO1xyXG59XHJcblxyXG5leHBvcnQgZnVuY3Rpb24gY29sb3JUbzQ4Qml0KHIsIGcsIGIpe1xyXG4gIGlmKCFCSVRfQ09MT1JTKXtcclxuICAgIHJldHVybiBbciAvIDI1NSwgZyAvIDI1NSwgYiAvIDI1NV07XHJcbiAgfVxyXG4gIHZhciByID0gTWF0aC5mbG9vcihyIC8gMTYpO1xyXG4gIHZhciBnID0gTWF0aC5mbG9vcihnIC8gMTYpO1xyXG4gIHZhciBiID0gTWF0aC5mbG9vcihiIC8gMTYpO1xyXG4gIHZhciBvdXQgPSBbXTtcclxuICAvLyBNYWtlIHRoZSBvdXRwdXQgYml0d2lzZSB5ZXMgb3Igbm8gZm9yIGlmIHRoZSBjb2xvciBpcyBlYWNoIHZhbHVlLlxyXG4gIGZvcih2YXIgaT0wOyBpIDwgMTY7ICsraSkgb3V0W2kgKyAgMF0gPSAxICogKGkgPT0gcik7XHJcbiAgZm9yKHZhciBpPTA7IGkgPCAxNjsgKytpKSBvdXRbaSArIDE2XSA9IDEgKiAoaSA9PSBnKTtcclxuICBmb3IodmFyIGk9MDsgaSA8IDE2OyArK2kpIG91dFtpICsgMzJdID0gMSAqIChpID09IGIpO1xyXG4gIHJldHVybiBvdXQ7XHJcbn1cclxuXHJcbmV4cG9ydCBmdW5jdGlvbiBjb2xvckZyb200OEJpdChhcnIpe1xyXG4gIGlmKCFCSVRfQ09MT1JTKXtcclxuICAgIHJldHVybiB7IHI6IGFyclswXSAqIDI1NSwgZzogYXJyWzFdICogMjU1LCBiOiBhcnJbMl0gKiAyNTV9O1xyXG4gIH1cclxuICB2YXIgcnMgPSBhcnIuc2xpY2UoMCwgMTYpO1xyXG4gIHZhciBncyA9IGFyci5zbGljZSgxNiwgMzIpO1xyXG4gIHZhciBicyA9IGFyci5zbGljZSgzMiwgNDgpO1xyXG4gIHZhciByID0gcnMuaW5kZXhPZihNYXRoLm1heC5hcHBseShudWxsLCBycykpO1xyXG4gIHZhciBnID0gZ3MuaW5kZXhPZihNYXRoLm1heC5hcHBseShudWxsLCBncykpO1xyXG4gIHZhciBiID0gYnMuaW5kZXhPZihNYXRoLm1heC5hcHBseShudWxsLCBicykpO1xyXG4gIHJldHVybiB7IHI6IDE2ICogciwgZzogMTYgKiBnLCBiOiAxNiAqIGJ9O1xyXG59XHJcblxyXG5leHBvcnQgZnVuY3Rpb24gcG9zaXRpb25Ub1F1YWRyYW50cyh4LCBtYXhYLCBkZXB0aCl7XHJcbiAgdmFyIG91dCA9IFtdO1xyXG4gIGZvcih2YXIgaT0wOyBpIDwgZGVwdGg7ICsraSl7XHJcbiAgICBpZih4IDwgbWF4WCAvIDIpe1xyXG4gICAgICBvdXRbaV0gPSAwOyAvLyAwID0gbGVmdCBoYWxmIG9mIGVhY2ggc3ViIGhhbGZcclxuICAgICAgbWF4WCA9IG1heFggLyAyO1xyXG4gICAgfWVsc2V7XHJcbiAgICAgIG91dFtpXSA9IDE7XHJcbiAgICAgIHggLT0gbWF4WCAvIDI7XHJcbiAgICAgIG1heFggPSBtYXhYIC8gMjtcclxuICAgIH1cclxuICB9XHJcbiAgcmV0dXJuIG91dDtcclxufVxyXG53aW5kb3cucG9zaXRpb25Ub1F1YWRyYW50cyA9IHBvc2l0aW9uVG9RdWFkcmFudHM7XHJcblxuXG5cbi8vLy8vLy8vLy8vLy8vLy8vL1xuLy8gV0VCUEFDSyBGT09URVJcbi8vIC4vc3JjL2ltYWdlL3ByZXBhcmVOTi5qc1xuLy8gbW9kdWxlIGlkID0gN1xuLy8gbW9kdWxlIGNodW5rcyA9IDAiXSwic291cmNlUm9vdCI6IiJ9");

/***/ },
/* 8 */
/***/ function(module, exports, __webpack_require__) {

module.exports = __webpack_require__(5);


/***/ }
/******/ ]);